"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.assetIndex = assetIndex;
exports.assetTotal = assetTotal;
exports.assetDecimals = assetDecimals;
exports.assetDefaultFrozen = assetDefaultFrozen;
exports.assetMetadataHash = assetMetadataHash;
exports.assetName = assetName;
exports.assetUnitName = assetUnitName;
exports.assetURL = assetURL;
exports["default"] = void 0;

var _rules = _interopRequireDefault(require("./rules"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * Test for a valid Algorand asset index
 * @category Core
 * @param {number}
 * @returns {boolean}
 */
function assetIndex(assetId) {
  return _rules["default"].assetIndex.test(assetId);
}
/**
 * Validate total issuance amount when creating an asset
 * @category Assets
 * @param {number}
 * @returns {boolean}
 */


function assetTotal(total) {
  return _rules["default"].assetTotal.test(total);
}
/**
 * Validate asset decimal places when creating an asset
 * @category Assets
 * @param {number}
 * @returns {boolean}
 */


function assetDecimals(decimals) {
  return _rules["default"].assetDecimals.test(decimals);
}
/**
 * Validate defaultFrozen has a boolean value when creating an asset
 * @category Assets
 * @param {boolean}
 * @returns {boolean}
 */


function assetDefaultFrozen(defaultFrozen) {
  return _rules["default"].assetDefaultFrozen.test(defaultFrozen);
}
/**
 * Validate for a metadata hash string when creating an asset
 * @category Assets
 * @param {string}
 * @returns {boolean}
 */


function assetMetadataHash(hash) {
  return _rules["default"].assetMetadataHash.test(hash);
}
/**
 * Validate asset name when creating an asset
 * @category Assets
 * @param {string}
 * @returns {boolean}
 */


function assetName(assetName) {
  return _rules["default"].assetName.test(assetName);
}
/**
 * Validate unit name when creating an asset
 * @category Assets
 * @param {string}
 * @returns {boolean}
 */


function assetUnitName(unitName) {
  return _rules["default"].assetUnitName.test(unitName);
}
/**
 * Validate asset url when creating an asset
 * @category Assets
 * @param {string}
 * @returns {boolean}
 */


function assetURL(url) {
  return _rules["default"].assetURL.test(url);
}

var _default = {
  assetIndex: assetIndex,
  assetTotal: assetTotal,
  assetDecimals: assetDecimals,
  assetDefaultFrozen: assetDefaultFrozen,
  assetName: assetName,
  assetUnitName: assetUnitName,
  assetURL: assetURL,
  assetMetadataHash: assetMetadataHash
};
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hc3NldEZpZWxkVmFsaWRhdG9ycy50cyJdLCJuYW1lcyI6WyJhc3NldEluZGV4IiwiYXNzZXRJZCIsInJ1bGVzIiwidGVzdCIsImFzc2V0VG90YWwiLCJ0b3RhbCIsImFzc2V0RGVjaW1hbHMiLCJkZWNpbWFscyIsImFzc2V0RGVmYXVsdEZyb3plbiIsImRlZmF1bHRGcm96ZW4iLCJhc3NldE1ldGFkYXRhSGFzaCIsImhhc2giLCJhc3NldE5hbWUiLCJhc3NldFVuaXROYW1lIiwidW5pdE5hbWUiLCJhc3NldFVSTCIsInVybCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFFQTs7Ozs7O0FBTU8sU0FBU0EsVUFBVCxDQUFvQkMsT0FBcEIsRUFBcUM7QUFDMUMsU0FBT0Msa0JBQU1GLFVBQU4sQ0FBaUJHLElBQWpCLENBQXNCRixPQUF0QixDQUFQO0FBQ0Q7QUFFRDs7Ozs7Ozs7QUFNTyxTQUFTRyxVQUFULENBQW9CQyxLQUFwQixFQUFtQztBQUN4QyxTQUFPSCxrQkFBTUUsVUFBTixDQUFpQkQsSUFBakIsQ0FBc0JFLEtBQXRCLENBQVA7QUFDRDtBQUVEOzs7Ozs7OztBQU1PLFNBQVNDLGFBQVQsQ0FBdUJDLFFBQXZCLEVBQXlDO0FBQzlDLFNBQU9MLGtCQUFNSSxhQUFOLENBQW9CSCxJQUFwQixDQUF5QkksUUFBekIsQ0FBUDtBQUNEO0FBRUQ7Ozs7Ozs7O0FBTU8sU0FBU0Msa0JBQVQsQ0FBNEJDLGFBQTVCLEVBQW9EO0FBQ3pELFNBQU9QLGtCQUFNTSxrQkFBTixDQUF5QkwsSUFBekIsQ0FBOEJNLGFBQTlCLENBQVA7QUFDRDtBQUVEOzs7Ozs7OztBQU1PLFNBQVNDLGlCQUFULENBQTJCQyxJQUEzQixFQUF5QztBQUM5QyxTQUFPVCxrQkFBTVEsaUJBQU4sQ0FBd0JQLElBQXhCLENBQTZCUSxJQUE3QixDQUFQO0FBQ0Q7QUFFRDs7Ozs7Ozs7QUFNTyxTQUFTQyxTQUFULENBQW1CQSxTQUFuQixFQUFzQztBQUMzQyxTQUFPVixrQkFBTVUsU0FBTixDQUFnQlQsSUFBaEIsQ0FBcUJTLFNBQXJCLENBQVA7QUFDRDtBQUVEOzs7Ozs7OztBQU1PLFNBQVNDLGFBQVQsQ0FBdUJDLFFBQXZCLEVBQXlDO0FBQzlDLFNBQU9aLGtCQUFNVyxhQUFOLENBQW9CVixJQUFwQixDQUF5QlcsUUFBekIsQ0FBUDtBQUNEO0FBRUQ7Ozs7Ozs7O0FBTU8sU0FBU0MsUUFBVCxDQUFrQkMsR0FBbEIsRUFBK0I7QUFDcEMsU0FBT2Qsa0JBQU1hLFFBQU4sQ0FBZVosSUFBZixDQUFvQmEsR0FBcEIsQ0FBUDtBQUNEOztlQUVjO0FBQ2JoQixFQUFBQSxVQUFVLEVBQVZBLFVBRGE7QUFFYkksRUFBQUEsVUFBVSxFQUFWQSxVQUZhO0FBR2JFLEVBQUFBLGFBQWEsRUFBYkEsYUFIYTtBQUliRSxFQUFBQSxrQkFBa0IsRUFBbEJBLGtCQUphO0FBS2JJLEVBQUFBLFNBQVMsRUFBVEEsU0FMYTtBQU1iQyxFQUFBQSxhQUFhLEVBQWJBLGFBTmE7QUFPYkUsRUFBQUEsUUFBUSxFQUFSQSxRQVBhO0FBUWJMLEVBQUFBLGlCQUFpQixFQUFqQkE7QUFSYSxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJ1bGVzIGZyb20gJy4vcnVsZXMnO1xuXG4vKipcbiAqIFRlc3QgZm9yIGEgdmFsaWQgQWxnb3JhbmQgYXNzZXQgaW5kZXhcbiAqIEBjYXRlZ29yeSBDb3JlXG4gKiBAcGFyYW0ge251bWJlcn1cbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzZXRJbmRleChhc3NldElkOiBudW1iZXIpIHtcbiAgcmV0dXJuIHJ1bGVzLmFzc2V0SW5kZXgudGVzdChhc3NldElkKTtcbn1cblxuLyoqXG4gKiBWYWxpZGF0ZSB0b3RhbCBpc3N1YW5jZSBhbW91bnQgd2hlbiBjcmVhdGluZyBhbiBhc3NldFxuICogQGNhdGVnb3J5IEFzc2V0c1xuICogQHBhcmFtIHtudW1iZXJ9XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2V0VG90YWwodG90YWw6IG51bWJlcikge1xuICByZXR1cm4gcnVsZXMuYXNzZXRUb3RhbC50ZXN0KHRvdGFsKTtcbn1cblxuLyoqXG4gKiBWYWxpZGF0ZSBhc3NldCBkZWNpbWFsIHBsYWNlcyB3aGVuIGNyZWF0aW5nIGFuIGFzc2V0XG4gKiBAY2F0ZWdvcnkgQXNzZXRzXG4gKiBAcGFyYW0ge251bWJlcn1cbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzZXREZWNpbWFscyhkZWNpbWFsczogbnVtYmVyKSB7XG4gIHJldHVybiBydWxlcy5hc3NldERlY2ltYWxzLnRlc3QoZGVjaW1hbHMpO1xufVxuXG4vKipcbiAqIFZhbGlkYXRlIGRlZmF1bHRGcm96ZW4gaGFzIGEgYm9vbGVhbiB2YWx1ZSB3aGVuIGNyZWF0aW5nIGFuIGFzc2V0XG4gKiBAY2F0ZWdvcnkgQXNzZXRzXG4gKiBAcGFyYW0ge2Jvb2xlYW59XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2V0RGVmYXVsdEZyb3plbihkZWZhdWx0RnJvemVuOiBib29sZWFuKSB7XG4gIHJldHVybiBydWxlcy5hc3NldERlZmF1bHRGcm96ZW4udGVzdChkZWZhdWx0RnJvemVuKTtcbn1cblxuLyoqXG4gKiBWYWxpZGF0ZSBmb3IgYSBtZXRhZGF0YSBoYXNoIHN0cmluZyB3aGVuIGNyZWF0aW5nIGFuIGFzc2V0XG4gKiBAY2F0ZWdvcnkgQXNzZXRzXG4gKiBAcGFyYW0ge3N0cmluZ31cbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzZXRNZXRhZGF0YUhhc2goaGFzaDogc3RyaW5nKSB7XG4gIHJldHVybiBydWxlcy5hc3NldE1ldGFkYXRhSGFzaC50ZXN0KGhhc2gpO1xufVxuXG4vKipcbiAqIFZhbGlkYXRlIGFzc2V0IG5hbWUgd2hlbiBjcmVhdGluZyBhbiBhc3NldFxuICogQGNhdGVnb3J5IEFzc2V0c1xuICogQHBhcmFtIHtzdHJpbmd9XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2V0TmFtZShhc3NldE5hbWU6IHN0cmluZykge1xuICByZXR1cm4gcnVsZXMuYXNzZXROYW1lLnRlc3QoYXNzZXROYW1lKTtcbn1cblxuLyoqXG4gKiBWYWxpZGF0ZSB1bml0IG5hbWUgd2hlbiBjcmVhdGluZyBhbiBhc3NldFxuICogQGNhdGVnb3J5IEFzc2V0c1xuICogQHBhcmFtIHtzdHJpbmd9XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2V0VW5pdE5hbWUodW5pdE5hbWU6IHN0cmluZykge1xuICByZXR1cm4gcnVsZXMuYXNzZXRVbml0TmFtZS50ZXN0KHVuaXROYW1lKTtcbn1cblxuLyoqXG4gKiBWYWxpZGF0ZSBhc3NldCB1cmwgd2hlbiBjcmVhdGluZyBhbiBhc3NldFxuICogQGNhdGVnb3J5IEFzc2V0c1xuICogQHBhcmFtIHtzdHJpbmd9XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2V0VVJMKHVybDogc3RyaW5nKSB7XG4gIHJldHVybiBydWxlcy5hc3NldFVSTC50ZXN0KHVybCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgYXNzZXRJbmRleCxcbiAgYXNzZXRUb3RhbCxcbiAgYXNzZXREZWNpbWFscyxcbiAgYXNzZXREZWZhdWx0RnJvemVuLFxuICBhc3NldE5hbWUsXG4gIGFzc2V0VW5pdE5hbWUsXG4gIGFzc2V0VVJMLFxuICBhc3NldE1ldGFkYXRhSGFzaFxufTtcbiJdfQ==