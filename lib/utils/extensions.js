"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.base32CharsOnly = exports.minByteLength = exports.maxByteLength = exports.exactByteLength = void 0;

var _fastestsmallesttextencoderdecoder = require("fastestsmallesttextencoderdecoder");

var exactByteLength = function exactByteLength(validLength) {
  return function (val) {
    return new _fastestsmallesttextencoderdecoder.TextEncoder().encode(val).length === validLength;
  };
};

exports.exactByteLength = exactByteLength;

var maxByteLength = function maxByteLength(maxLength) {
  return function (val) {
    return new _fastestsmallesttextencoderdecoder.TextEncoder().encode(val).length <= maxLength;
  };
};

exports.maxByteLength = maxByteLength;

var minByteLength = function minByteLength(minLength) {
  return function (val) {
    return new _fastestsmallesttextencoderdecoder.TextEncoder().encode(val).length >= minLength;
  };
};

exports.minByteLength = minByteLength;

var base32CharsOnly = function base32CharsOnly() {
  return function (val) {
    // Algorand strips off padding and doesn't adhere to multiples of 8 length constraint
    var b32_regex = new RegExp(/^[A-Z2-7]*$/);
    return b32_regex.test(val);
  };
};

exports.base32CharsOnly = base32CharsOnly;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9leHRlbnNpb25zLnRzIl0sIm5hbWVzIjpbImV4YWN0Qnl0ZUxlbmd0aCIsInZhbGlkTGVuZ3RoIiwidmFsIiwiVGV4dEVuY29kZXIiLCJlbmNvZGUiLCJsZW5ndGgiLCJtYXhCeXRlTGVuZ3RoIiwibWF4TGVuZ3RoIiwibWluQnl0ZUxlbmd0aCIsIm1pbkxlbmd0aCIsImJhc2UzMkNoYXJzT25seSIsImIzMl9yZWdleCIsIlJlZ0V4cCIsInRlc3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFTyxJQUFNQSxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQUNDLFdBQUQ7QUFBQSxTQUF5QixVQUFDQyxHQUFEO0FBQUEsV0FDdEQsSUFBSUMsOENBQUosR0FBa0JDLE1BQWxCLENBQXlCRixHQUF6QixFQUE4QkcsTUFBOUIsS0FBeUNKLFdBRGE7QUFBQSxHQUF6QjtBQUFBLENBQXhCOzs7O0FBR0EsSUFBTUssYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixDQUFDQyxTQUFEO0FBQUEsU0FBdUIsVUFBQ0wsR0FBRDtBQUFBLFdBQ2xELElBQUlDLDhDQUFKLEdBQWtCQyxNQUFsQixDQUF5QkYsR0FBekIsRUFBOEJHLE1BQTlCLElBQXdDRSxTQURVO0FBQUEsR0FBdkI7QUFBQSxDQUF0Qjs7OztBQUdBLElBQU1DLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsQ0FBQ0MsU0FBRDtBQUFBLFNBQXVCLFVBQUNQLEdBQUQ7QUFBQSxXQUNsRCxJQUFJQyw4Q0FBSixHQUFrQkMsTUFBbEIsQ0FBeUJGLEdBQXpCLEVBQThCRyxNQUE5QixJQUF3Q0ksU0FEVTtBQUFBLEdBQXZCO0FBQUEsQ0FBdEI7Ozs7QUFHQSxJQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCO0FBQUEsU0FBTSxVQUFDUixHQUFELEVBQWlCO0FBQ3BEO0FBQ0EsUUFBTVMsU0FBUyxHQUFHLElBQUlDLE1BQUosQ0FBVyxhQUFYLENBQWxCO0FBQ0EsV0FBT0QsU0FBUyxDQUFDRSxJQUFWLENBQWVYLEdBQWYsQ0FBUDtBQUNELEdBSjhCO0FBQUEsQ0FBeEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZXh0RW5jb2RlciB9IGZyb20gJ2Zhc3Rlc3RzbWFsbGVzdHRleHRlbmNvZGVyZGVjb2Rlcic7XG5cbmV4cG9ydCBjb25zdCBleGFjdEJ5dGVMZW5ndGggPSAodmFsaWRMZW5ndGg6IG51bWJlcikgPT4gKHZhbDogc3RyaW5nKSA9PlxuICBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodmFsKS5sZW5ndGggPT09IHZhbGlkTGVuZ3RoO1xuXG5leHBvcnQgY29uc3QgbWF4Qnl0ZUxlbmd0aCA9IChtYXhMZW5ndGg6IG51bWJlcikgPT4gKHZhbDogc3RyaW5nKSA9PlxuICBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodmFsKS5sZW5ndGggPD0gbWF4TGVuZ3RoO1xuXG5leHBvcnQgY29uc3QgbWluQnl0ZUxlbmd0aCA9IChtaW5MZW5ndGg6IG51bWJlcikgPT4gKHZhbDogc3RyaW5nKSA9PlxuICBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodmFsKS5sZW5ndGggPj0gbWluTGVuZ3RoO1xuXG5leHBvcnQgY29uc3QgYmFzZTMyQ2hhcnNPbmx5ID0gKCkgPT4gKHZhbDogc3RyaW5nKSA9PiB7XG4gIC8vIEFsZ29yYW5kIHN0cmlwcyBvZmYgcGFkZGluZyBhbmQgZG9lc24ndCBhZGhlcmUgdG8gbXVsdGlwbGVzIG9mIDggbGVuZ3RoIGNvbnN0cmFpbnRcbiAgY29uc3QgYjMyX3JlZ2V4ID0gbmV3IFJlZ0V4cCgvXltBLVoyLTddKiQvKTtcbiAgcmV0dXJuIGIzMl9yZWdleC50ZXN0KHZhbCk7XG59O1xuIl19